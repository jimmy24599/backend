var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useChannelState = useChannelState;
exports.useStateManager = useStateManager;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _ChannelsStateContext = require("./ChannelsStateContext");
function useStateManager(_ref, initialValue) {
  var _state$cid;
  var cid = _ref.cid,
    key = _ref.key,
    setState = _ref.setState,
    state = _ref.state;
  var memoizedInitialValue = (0, _react.useMemo)(function () {
    return initialValue;
  }, []);
  var value = ((_state$cid = state[cid]) == null ? void 0 : _state$cid[key]) || memoizedInitialValue;
  var setValue = (0, _react.useCallback)(function (value) {
    return setState({
      cid: cid,
      key: key,
      value: value
    });
  }, [cid, key]);
  return [value, setValue];
}
function useChannelState(channel, threadId) {
  var _channel$state;
  var cid = (channel == null ? void 0 : channel.id) || 'id';
  var _useChannelsStateCont = (0, _ChannelsStateContext.useChannelsStateContext)(),
    setState = _useChannelsStateCont.setState,
    state = _useChannelsStateCont.state;
  var _useStateManager = useStateManager({
      cid: cid,
      key: 'threadMessages',
      setState: setState,
      state: state
    }, threadId && (channel == null || (_channel$state = channel.state) == null || (_channel$state = _channel$state.threads) == null ? void 0 : _channel$state[threadId]) || []),
    _useStateManager2 = (0, _slicedToArray2["default"])(_useStateManager, 2),
    threadMessages = _useStateManager2[0],
    setThreadMessages = _useStateManager2[1];
  return {
    setThreadMessages: setThreadMessages,
    threadMessages: threadMessages
  };
}
//# sourceMappingURL=useChannelState.js.map