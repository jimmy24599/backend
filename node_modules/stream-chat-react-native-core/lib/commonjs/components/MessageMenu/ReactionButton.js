var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReactionButton = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _ThemeContext = require("../../contexts/themeContext/ThemeContext");
var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/home/runner/work/stream-chat-react-native/stream-chat-react-native/package/src/components/MessageMenu/ReactionButton.tsx";
var ReactionButton = exports.ReactionButton = function ReactionButton(props) {
  var Icon = props.Icon,
    onPress = props.onPress,
    selected = props.selected,
    type = props.type;
  var _useTheme = (0, _ThemeContext.useTheme)(),
    _useTheme$theme = _useTheme.theme,
    _useTheme$theme$color = _useTheme$theme.colors,
    light_blue = _useTheme$theme$color.light_blue,
    white = _useTheme$theme$color.white,
    _useTheme$theme$messa = _useTheme$theme.messageMenu,
    _useTheme$theme$messa2 = _useTheme$theme$messa.reactionButton,
    filledColor = _useTheme$theme$messa2.filledColor,
    unfilledColor = _useTheme$theme$messa2.unfilledColor,
    _useTheme$theme$messa3 = _useTheme$theme$messa.reactionPicker,
    buttonContainer = _useTheme$theme$messa3.buttonContainer,
    reactionIconSize = _useTheme$theme$messa3.reactionIconSize;
  var onPressHandler = function onPressHandler() {
    if (onPress) {
      onPress(type);
    }
  };
  return (0, _jsxRuntime.jsx)(_reactNative.Pressable, {
    accessibilityLabel: "reaction-button-".concat(type, "-").concat(selected ? 'selected' : 'unselected'),
    onPress: onPressHandler,
    style: function style(_ref) {
      var pressed = _ref.pressed;
      return [styles.reactionButton, {
        backgroundColor: pressed || selected ? light_blue : white
      }, buttonContainer];
    },
    children: (0, _jsxRuntime.jsx)(Icon, {
      height: reactionIconSize,
      pathFill: selected ? filledColor : unfilledColor,
      width: reactionIconSize
    })
  });
};
var styles = _reactNative.StyleSheet.create({
  reactionButton: {
    alignItems: 'center',
    borderRadius: 8,
    justifyContent: 'center',
    padding: 8
  }
});
//# sourceMappingURL=ReactionButton.js.map