var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.selectChannelIdsForFilterSort = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _createSelectQuery = require("../../sqlite-utils/createSelectQuery");
var _SqliteClient = require("../../SqliteClient");
var _convertFilterSortToQuery = require("../utils/convertFilterSortToQuery");
var selectChannelIdsForFilterSort = exports.selectChannelIdsForFilterSort = function () {
  var _ref2 = (0, _asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee(_ref) {
    var _results$;
    var filters, sort, query, results, channelIdsStr;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          filters = _ref.filters, sort = _ref.sort;
          query = (0, _convertFilterSortToQuery.convertFilterSortToQuery)({
            filters: filters,
            sort: sort
          });
          _SqliteClient.SqliteClient.logger == null || _SqliteClient.SqliteClient.logger('info', 'selectChannelIdsForFilterSort', {
            query: query
          });
          _context.next = 5;
          return _SqliteClient.SqliteClient.executeSql.apply(null, (0, _createSelectQuery.createSelectQuery)('channelQueries', ['*'], {
            id: query
          }));
        case 5:
          results = _context.sent;
          channelIdsStr = results == null || (_results$ = results[0]) == null ? void 0 : _results$.cids;
          return _context.abrupt("return", channelIdsStr ? JSON.parse(channelIdsStr) : null);
        case 8:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function selectChannelIdsForFilterSort(_x) {
    return _ref2.apply(this, arguments);
  };
}();
//# sourceMappingURL=selectChannelIdsForFilterSort.js.map