var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.selectChannels = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _createSelectQuery = require("../../sqlite-utils/createSelectQuery");
var _SqliteClient = require("../../SqliteClient");
var selectChannels = exports.selectChannels = function () {
  var _ref = (0, _asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee() {
    var _ref2,
      channelIds,
      query,
      result,
      _args = arguments;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, channelIds = _ref2.channelIds;
          query = (0, _createSelectQuery.createSelectQuery)('channels', ['*'], channelIds ? {
            cid: channelIds
          } : undefined);
          _SqliteClient.SqliteClient.logger == null || _SqliteClient.SqliteClient.logger('info', 'selectChannels', {
            channelIds: channelIds
          });
          _context.next = 5;
          return _SqliteClient.SqliteClient.executeSql.apply(null, query);
        case 5:
          result = _context.sent;
          if (!channelIds) {
            _context.next = 10;
            break;
          }
          return _context.abrupt("return", result.sort(function (a, b) {
            return channelIds.indexOf(a.cid) - channelIds.indexOf(b.cid);
          }));
        case 10:
          return _context.abrupt("return", result);
        case 11:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function selectChannels() {
    return _ref.apply(this, arguments);
  };
}();
//# sourceMappingURL=selectChannels.js.map