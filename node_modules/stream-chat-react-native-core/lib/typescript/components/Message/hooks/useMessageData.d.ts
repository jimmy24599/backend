import { MessageContextValue } from '../../../contexts/messageContext/MessageContext';
import { DefaultStreamChatGenerics } from '../../../types/types';
export type UseMessageDataProps<StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics> = Partial<Pick<MessageContextValue<StreamChatGenerics>, 'channel' | 'groupStyles' | 'isMyMessage' | 'message'>>;
export declare const useMessageData: <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>({ channel: propChannel, groupStyles: propGroupStyles, isMyMessage: propIsMyMessage, message: propMessage, }: UseMessageDataProps<StreamChatGenerics>) => {
    hasThreadReplies: boolean;
    isMessageErrorType: boolean;
    isMessageReceivedOrErrorType: boolean;
    isMessageTypeDeleted: boolean;
    isVeryLastMessage: boolean;
    messageGroupedSingleOrBottom: boolean;
};
//# sourceMappingURL=useMessageData.d.ts.map