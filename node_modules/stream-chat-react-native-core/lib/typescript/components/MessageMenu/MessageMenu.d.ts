import React from 'react';
import { MessageActionType } from './MessageActionListItem';
import { MessageContextValue } from '../../contexts/messageContext/MessageContext';
import { MessagesContextValue } from '../../contexts/messagesContext/MessagesContext';
import { DefaultStreamChatGenerics } from '../../types/types';
export type MessageMenuProps<StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics> = Partial<Pick<MessagesContextValue<StreamChatGenerics>, 'MessageActionList' | 'MessageActionListItem' | 'MessageReactionPicker' | 'MessageUserReactions' | 'MessageUserReactionsAvatar' | 'MessageUserReactionsItem'>> & Partial<Pick<MessageContextValue<StreamChatGenerics>, 'message'>> & {
    /**
     * Function to close the message actions bottom sheet
     * @returns void
     */
    dismissOverlay: () => void;
    /**
     * An array of message actions to render
     */
    messageActions: MessageActionType[];
    /**
     * Boolean to determine if there are message actions
     */
    showMessageReactions: boolean;
    /**
     * Boolean to determine if the overlay is visible.
     */
    visible: boolean;
    /**
     * Function to handle reaction on press
     * @param reactionType
     * @returns
     */
    handleReaction?: (reactionType: string) => Promise<void>;
    /**
     * The selected reaction
     */
    selectedReaction?: string;
};
export declare const MessageMenu: <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(props: MessageMenuProps<StreamChatGenerics>) => React.JSX.Element;
//# sourceMappingURL=MessageMenu.d.ts.map