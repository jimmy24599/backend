var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deleteMessagesForChannel = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _createDeleteQuery = require("../sqlite-utils/createDeleteQuery");
var _SqliteClient = require("../SqliteClient");
var deleteMessagesForChannel = exports.deleteMessagesForChannel = function () {
  var _ref2 = (0, _asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee(_ref) {
    var cid, _ref$flush, flush, query;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          cid = _ref.cid, _ref$flush = _ref.flush, flush = _ref$flush === void 0 ? true : _ref$flush;
          query = (0, _createDeleteQuery.createDeleteQuery)('messages', {
            cid: cid
          });
          _SqliteClient.SqliteClient.logger == null || _SqliteClient.SqliteClient.logger('info', 'deleteMessagesForChannel', {
            cid: cid,
            flush: flush
          });
          if (!flush) {
            _context.next = 6;
            break;
          }
          _context.next = 6;
          return _SqliteClient.SqliteClient.executeSql.apply(null, query);
        case 6:
          return _context.abrupt("return", [query]);
        case 7:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function deleteMessagesForChannel(_x) {
    return _ref2.apply(this, arguments);
  };
}();
//# sourceMappingURL=deleteMessagesForChannel.js.map