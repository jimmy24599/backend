var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StreamingMessageView = void 0;
var _react = _interopRequireDefault(require("react"));
var _MessageTextContainer = require("./MessageTextContainer");
var _contexts = require("../../../contexts");
var _useStreamingMessage2 = require("../hooks/useStreamingMessage");
var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/home/runner/work/stream-chat-react-native/stream-chat-react-native/package/src/components/Message/MessageSimple/StreamingMessageView.tsx";
var StreamingMessageView = exports.StreamingMessageView = function StreamingMessageView(props) {
  var letterInterval = props.letterInterval,
    messageFromProps = props.message,
    renderingLetterCount = props.renderingLetterCount;
  var _useMessageContext = (0, _contexts.useMessageContext)(),
    messageFromContext = _useMessageContext.message;
  var message = messageFromProps || messageFromContext;
  var _message$text = message.text,
    text = _message$text === void 0 ? '' : _message$text;
  var _useStreamingMessage = (0, _useStreamingMessage2.useStreamingMessage)({
      letterInterval: letterInterval,
      renderingLetterCount: renderingLetterCount,
      text: text
    }),
    streamedMessageText = _useStreamingMessage.streamedMessageText;
  return (0, _jsxRuntime.jsx)(_MessageTextContainer.MessageTextContainer, {
    message: Object.assign({}, message, {
      text: streamedMessageText
    })
  });
};
StreamingMessageView.displayName = 'StreamingMessageView{messageSimple{content}}';
//# sourceMappingURL=StreamingMessageView.js.map