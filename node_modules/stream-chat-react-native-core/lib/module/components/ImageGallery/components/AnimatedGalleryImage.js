var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AnimatedGalleryImage = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _reactNativeReanimated = _interopRequireDefault(require("react-native-reanimated"));
var _useAnimatedGalleryStyle = require("../hooks/useAnimatedGalleryStyle");
var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/home/runner/work/stream-chat-react-native/stream-chat-react-native/package/src/components/ImageGallery/components/AnimatedGalleryImage.tsx";
var oneEighth = 1 / 8;
var AnimatedGalleryImage = exports.AnimatedGalleryImage = _react["default"].memo(function (props) {
  var accessibilityLabel = props.accessibilityLabel,
    index = props.index,
    offsetScale = props.offsetScale,
    photo = props.photo,
    previous = props.previous,
    scale = props.scale,
    screenHeight = props.screenHeight,
    selected = props.selected,
    shouldRender = props.shouldRender,
    style = props.style,
    translateX = props.translateX,
    translateY = props.translateY;
  var animatedStyles = (0, _useAnimatedGalleryStyle.useAnimatedGalleryStyle)({
    index: index,
    offsetScale: offsetScale,
    previous: previous,
    scale: scale,
    screenHeight: screenHeight,
    selected: selected,
    translateX: translateX,
    translateY: translateY
  });
  if (!shouldRender) {
    return (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: [style, {
        transform: [{
          scale: oneEighth
        }]
      }]
    });
  }
  return (0, _jsxRuntime.jsx)(_reactNativeReanimated["default"].Image, {
    accessibilityLabel: accessibilityLabel,
    resizeMode: 'contain',
    source: {
      uri: photo.uri
    },
    style: [].concat((0, _toConsumableArray2["default"])(animatedStyles), [style])
  });
}, function (prevProps, nextProps) {
  if (prevProps.selected === nextProps.selected && prevProps.shouldRender === nextProps.shouldRender && prevProps.photo.uri === nextProps.photo.uri && prevProps.previous === nextProps.previous && prevProps.index === nextProps.index && prevProps.screenHeight === nextProps.screenHeight) {
    return true;
  }
  return false;
});
AnimatedGalleryImage.displayName = 'AnimatedGalleryImage';
//# sourceMappingURL=AnimatedGalleryImage.js.map